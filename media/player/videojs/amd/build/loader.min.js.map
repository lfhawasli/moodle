{"version":3,"sources":["../src/loader.js"],"names":["onload","setUp","executeonload","notifyVideoJS","Event","getLegacyEvents","done","events","document","on","FILTER_CONTENT_UPDATED","e","nodes","find","addBack","each","index","element","id","attr","config","data","modulePromises","techOrder","indexOf","push","Promise","all","then","videojs","catch","Notification","exception"],"mappings":"8JA0BA,OACA,O,6nCAKIA,CAAAA,C,CAQSC,CAAK,CAAG,SAACC,CAAD,CAAmB,CACpCF,CAAM,CAAGE,CAAT,CAEAC,CAAa,CAAC,IAAD,CAAO,cAAO,MAAP,CAAP,CAAb,CAEAC,UAAMC,eAAN,GAAwBC,IAAxB,CAA6B,SAACC,CAAD,CAAY,CACrC,cAAOC,QAAP,EAAiBC,EAAjB,CAAoBF,CAAM,CAACG,sBAA3B,CAAmDP,CAAnD,CACH,CAFD,CAGH,C,WAQD,GAAMA,CAAAA,CAAa,CAAG,SAACQ,CAAD,CAAIC,CAAJ,CAAc,CAOhCA,CAAK,CAACC,IAAN,yBACKC,OADL,yBAEKD,IAFL,CAEU,cAFV,EAE0BE,IAF1B,CAE+B,SAACC,CAAD,CAAQC,CAAR,CAAoB,IACrCC,CAAAA,CAAE,CAAG,cAAOD,CAAP,EAAgBE,IAAhB,CAAqB,IAArB,CADgC,CAErCC,CAAM,CAAG,cAAOH,CAAP,EAAgBI,IAAhB,CAAqB,YAArB,CAF4B,CAGrCC,CAAc,CAAG,6SAAQ,0BAAR,mDAHoB,CAK3C,GAAIF,CAAM,CAACG,SAAP,EAA4D,CAAC,CAAzC,GAAAH,CAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyB,SAAzB,CAAxB,CAAoE,CAEhEF,CAAc,CAACG,IAAf,+SAA2B,4BAA3B,qDACH,CACD,GAAIL,CAAM,CAACG,SAAP,EAA0D,CAAC,CAAvC,GAAAH,CAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyB,OAAzB,CAAxB,CAAkE,CAE9DF,CAAc,CAACG,IAAf,qTAA2B,kCAA3B,2DACH,CACDC,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAA4BM,IAA5B,CAAiC,WAAe,cAAbC,CAAa,MAC5C,GAAI7B,CAAJ,CAAY,CACRA,CAAM,CAAC6B,CAAD,CAAN,CACA7B,CAAM,CAAG,IACZ,CACD6B,CAAO,CAACX,CAAD,CAAKE,CAAL,CAEV,CAPD,EAOGU,KAPH,CAOSC,YAAY,CAACC,SAPtB,CAQH,CAvBL,CAwBH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Video JS loader.\n *\n * This takes care of applying the filter on content which was dynamically loaded.\n *\n * @module     media_videojs/loader\n * @package    media_videojs\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Event from 'core/event';\nimport jQuery from 'jquery';\n\n/**\n * Stores the method we need to execute on the first load of videojs module.\n */\nlet onload;\n\n/**\n * Set-up.\n *\n * Adds the listener for the event to then notify video.js.\n * @param {Function} executeonload function to execute when media_videojs/video is loaded\n */\nexport const setUp = (executeonload) => {\n    onload = executeonload;\n    // Notify Video.js about the nodes already present on the page.\n    notifyVideoJS(null, jQuery('body'));\n    // We need to call popover automatically if nodes are added to the page later.\n    Event.getLegacyEvents().done((events) => {\n        jQuery(document).on(events.FILTER_CONTENT_UPDATED, notifyVideoJS);\n    });\n};\n\n/**\n * Notify video.js of new nodes.\n *\n * @param {Event} e The event.\n * @param {NodeList} nodes List of new nodes.\n */\nconst notifyVideoJS = (e, nodes) => {\n    const selector = '.mediaplugin_videojs';\n\n    // Find the descendants matching the expected parent of the audio and video\n    // tags. Then also addBack the nodes matching the same selector. Finally,\n    // we find the audio and video tags contained in those parents. Kind thanks\n    // to jQuery for the simplicity.\n    nodes.find(selector)\n        .addBack(selector)\n        .find('audio, video').each((index, element) => {\n            const id = jQuery(element).attr('id');\n            const config = jQuery(element).data('setup-lazy');\n            const modulePromises = [import('media_videojs/video-lazy')];\n\n            if (config.techOrder && config.techOrder.indexOf('youtube') !== -1) {\n                // Add YouTube to the list of modules we require.\n                modulePromises.push(import('media_videojs/Youtube-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('flash') !== -1) {\n                // Add Flash to the list of modules we require.\n                modulePromises.push(import('media_videojs/videojs-flash-lazy'));\n            }\n            Promise.all(modulePromises).then(([videojs]) => {\n                if (onload) {\n                    onload(videojs);\n                    onload = null;\n                }\n                videojs(id, config);\n                return;\n            }).catch(Notification.exception);\n        });\n};\n"],"file":"loader.min.js"}